{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/Profile/Profile.jsx","helpers/randomColor.js","components/Statistics/Statistics.jsx","components/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","stats","className","styles","profile","class","card","src","alt","item","label","quantity","followers","views","likes","defaultProps","randColor","r","Math","floor","random","g","b","toString","Statistics","title","statistics","list","map","stat","style","backgroundColor","percentage","id","FriendListItem","isOnline","online","offline","width","FriendList","allFriends","friends","props","key","section","friend_list","TransactionHistory","transactionTableBody","items","body_column","text","type","amount","currency","transaction","table_head","head_column","table_body","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,OAAS,wBAAwB,MAAQ,uBAAuB,KAAO,sBAAsB,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,SAAW,4B,gBCAtTD,EAAOC,QAAU,CAAC,YAAc,wCAAwC,KAAO,iCAAiC,KAAO,iCAAiC,YAAc,0C,iBCAtKD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,KAAO,yBAAyB,MAAQ,0BAA0B,MAAQ,0BAA0B,WAAa,iC,gBCA/MD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,OAAS,+BAA+B,QAAU,gCAAgC,OAAS,+BAA+B,KAAO,+B,6PCAvLD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,YAAc,kC,q/FCKhEC,EAAU,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,SAASC,EAAW,EAAXA,MAE3C,OAAQ,sBAAKC,UAAWC,IAAOC,QAAvB,UACV,sBAAKC,MAAOF,IAAOG,KAAnB,UACE,qBACMC,IAAKV,EACLW,IAAI,gHACJN,UAAWC,IAAON,SAEpB,mBAAGK,UAAWC,IAAOL,KAArB,SAA4BA,IAChC,oBAAGI,UAAWC,IAAOJ,IAArB,cAA4BA,KAC5B,mBAAGG,UAAWC,IAAOH,SAArB,SAAgCA,OAGlC,qBAAIE,UAAWC,IAAOF,MAAtB,UACE,qBAAIC,UAAWC,IAAOM,KAAtB,UACM,sBAAMP,UAAWC,IAAOO,MAAxB,uBACA,sBAAMR,UAAWC,IAAOQ,SAAxB,SAAmCV,EAAMW,eAE/C,qBAAIV,UAAWC,IAAOM,KAAtB,UACM,sBAAMP,UAAWC,IAAOO,MAAxB,mBACA,sBAAMR,UAAWC,IAAOQ,SAAxB,SAAmCV,EAAMY,WAE/C,qBAAIX,UAAWC,IAAOM,KAAtB,UACM,sBAAMP,UAAWC,IAAOO,MAAxB,mBACA,sBAAMR,UAAWC,IAAOQ,SAAxB,SAAmCV,EAAMa,kBAMpClB,IAEfA,EAAQmB,aAAe,CACrBlB,OAAQ,kE,oBCxCGmB,EAAY,WACrB,IAAMC,EAAIC,KAAKC,MAAuB,IAAjBD,KAAKE,UACtBC,EAAIH,KAAKC,MAAuB,IAAjBD,KAAKE,UACpBE,EAAIJ,KAAKC,MAAuB,IAAjBD,KAAKE,UACxB,MAAO,IAAMH,EAAEM,SAAS,IAAMF,EAAEE,SAAS,IAAMD,EAAEC,SAAS,KCoB/CC,EAhBI,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,MAAOxB,EAAW,EAAXA,MACxB,OACF,0BAASC,UAAWC,IAAOuB,WAA3B,UACE,oBAAIxB,UAAWC,IAAOsB,MAAtB,SAA8BA,IAE9B,qBAAIvB,UAAWC,IAAOwB,KAAtB,cAA8B1B,EAAM2B,KAAI,SAACC,GAAD,OACxC,qBAAI3B,UAAWC,IAAOM,KAAoBqB,MAAO,CAACC,gBAAiBf,KAAnE,UACM,sBAAMd,UAAWC,IAAOO,MAAxB,SAAgCmB,EAAKnB,QACrC,sBAAMR,UAAWC,IAAO6B,WAAxB,SAAqCH,EAAKG,eAFfH,EAAKI,c,+BCE3BC,MAVf,YAAoD,IAA3BrC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,KAAMqC,EAAY,EAAZA,SACnC,OACI,qBAAIjC,UAAWC,IAAOM,KAAtB,UACA,sBAAMP,UAAaiC,EAAUhC,IAAOiC,OAASjC,IAAOkC,QAApD,SAA+DF,IAC/D,qBAAKjC,UAAWC,IAAON,OAASU,IAAKV,EAAQW,IAAI,GAAG8B,MAAM,OAC1D,mBAAGpC,UAAWC,IAAOL,KAArB,SAA4BA,Q,gBCarByC,EAhBI,SAAC,GAAiB,IAG3BC,EAH0B,EAAdC,QAGSb,KAAI,gBAAGK,EAAH,EAAGA,GAAOS,EAAV,6BAAsB,wBAAC,EAAD,2BAAoBA,GAApB,IAA2BC,IAAKV,QAErF,OACA,mCACC,yBAAS/B,UAAYC,IAAOyC,QAA5B,SACD,oBAAI1C,UAAWC,IAAO0C,YAAtB,SACKL,S,gBCiBMM,EA5BY,SAAC,GAAe,IAEnCC,EAFkC,EAAZC,MAEOpB,KAAI,SAACnB,GAAD,OACzC,qBAAkBP,UAAWC,IAAO8C,YAApC,UACA,oBAAI/C,UAAWC,IAAO+C,KAAtB,SAA6BzC,EAAK0C,OAClC,oBAAIjD,UAAWC,IAAO+C,KAAtB,SAA6BzC,EAAK2C,SAClC,oBAAIlD,UAAWC,IAAO+C,KAAtB,SAA6BzC,EAAK4C,aAHzB5C,EAAKwB,OAMV,OACD,mCACF,wBAAO/B,UAAWC,IAAOmD,YAAzB,UACC,uBAAOpD,UAAWC,IAAOoD,WAAzB,SACE,qBAAIrD,UAAWC,IAAOqD,YAAtB,UACE,oBAAItD,UAAWC,IAAOL,KAAtB,kBACA,oBAAII,UAAWC,IAAOL,KAAtB,oBACA,oBAAII,UAAWC,IAAOL,KAAtB,2BAIJ,uBAAOI,UAAWC,IAAOsD,WAAzB,SACCV,U,+BCKYW,MApBf,WACE,OACE,sBAAKxD,UAAU,MAAf,UACE,cAAC,EAAD,CACEJ,KAAM6D,EAAK7D,KACXC,IAAK4D,EAAK5D,IACVC,SAAU2D,EAAK3D,SACfH,OAAQ8D,EAAK9D,OACbI,MAAO0D,EAAK1D,QAEd,cAAC,EAAD,CAAYwB,MAAM,eAAexB,MAAO2D,IAExC,cAAC,EAAD,CAAYnB,QAASA,IAErB,cAAC,EAAD,CAAoBO,MAAOa,QCdlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0d47e6de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\",\"card\":\"Profile_card__3-Oh8\",\"avatar\":\"Profile_avatar__aV4u5\",\"stats\":\"Profile_stats__25zJx\",\"item\":\"Profile_item__Kyaaw\",\"name\":\"Profile_name__2Psdw\",\"tag\":\"Profile_tag__20iCl\",\"location\":\"Profile_location__3GRdm\",\"label\":\"Profile_label__3Zjy8\",\"quantity\":\"Profile_quantity__1zFQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction\":\"TransactionHistory_transaction__3Krl5\",\"name\":\"TransactionHistory_name__2iIRS\",\"text\":\"TransactionHistory_text__1g4S1\",\"body_column\":\"TransactionHistory_body_column__2n7ZP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2QFok\",\"list\":\"Statistics_list__3oKT7\",\"item\":\"Statistics_item__1vE2T\",\"title\":\"Statistics_title__3PVIg\",\"label\":\"Statistics_label__227YU\",\"percentage\":\"Statistics_percentage__3inQt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__1isJt\",\"online\":\"FriendListItem_online__3H0uN\",\"offline\":\"FriendListItem_offline__rrogY\",\"avatar\":\"FriendListItem_avatar__1Coux\",\"name\":\"FriendListItem_name__2FRpb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"FriendList_section__LJKs2\",\"friend_list\":\"FriendList_friend_list__1XTLl\"};","import React from 'react';\n\nimport PropTypes from \"prop-types\";\n\nimport styles from './Profile.module.css';\n\nconst Profile = ({ avatar, name, tag, location,stats}) => {\n\n    return (<div className={styles.profile}>\n  <div class={styles.card}>\n    <img\n          src={avatar}\n          alt=\"Аватар пользователя\"\n          className={styles.avatar}\n    />\n        <p className={styles.name}>{name}</p>\n    <p className={styles.tag}>@{tag}</p>\n    <p className={styles.location}>{location}</p>\n  </div>\n\n  <ul className={styles.stats}>\n    <li className={styles.item}>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quantity}>{stats.followers}</span>\n    </li>\n    <li className={styles.item}>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quantity}>{stats.views}</span>\n    </li>\n    <li className={styles.item}>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quantity}>{stats.likes}</span>\n    </li>\n  </ul>\n</div>)\n};\n\nexport default Profile;\n\nProfile.defaultProps = {\n  avatar: 'https://www.flaticon.com/svg/static/icons/svg/3784/3784184.svg'\n}\n\n\nProfile.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location:PropTypes.string.isRequired,\n\n  stats: PropTypes.shape({\n    followers:PropTypes.number.isRequired,\n    views:PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }).isRequired\n}\n","export const randColor = ()=> {\n    const r = Math.floor(Math.random() * (256)),\n        g = Math.floor(Math.random() * (256)),\n        b = Math.floor(Math.random() * (256));\n    return '#' + r.toString(16) + g.toString(16) + b.toString(16);\n}\n","import React from 'react';\n\nimport PropTypes from \"prop-types\";\n\nimport styles from './Statistics.module.css';\n\nimport {randColor} from '../../helpers'\n\nconst Statistics = ({title, stats}) => {\n    return (\n  <section className={styles.statistics}>\n    <h2 className={styles.title}>{title}</h2>\n\n    <ul className={styles.list}> {stats.map((stat) => (\n    <li className={styles.item} key={stat.id} style={{backgroundColor: randColor()}}>\n          <span className={styles.label}>{stat.label}</span>\n          <span className={styles.percentage}>{stat.percentage}</span>\n        </li>\n    ))}\n      </ul>\n</section>\n    )\n};\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  title: PropTypes.string.isRequired,\n\n  stats: PropTypes.shape({\n    id:PropTypes.number.isRequired,\n    label:PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired,\n  })\n}","import React from 'react';\n\nimport PropTypes from \"prop-types\";\n\nimport styles from './FriendListItem.module.css';\n\nfunction FriendListItem({avatar, name, isOnline }) {\n    return (\n        <li className={styles.item} >\n        <span className = {isOnline? styles.online : styles.offline} >{isOnline}</span>\n        <img className={styles.avatar}  src={avatar} alt=\"\" width=\"48\" />\n        <p className={styles.name}>{name}</p>\n        </li>\n    )\n};\n\nexport default FriendListItem;\n\nFriendListItem.propTypes = {\n    \n    avatar: PropTypes.string.isRequired,\n    \n    name: PropTypes.string.isRequired,\n\n    isOnline: PropTypes.string.isRequired,\n\n}","import React from 'react';\n\nimport PropTypes from \"prop-types\";\n\nimport FriendListItem from '../FriendListItem';\n\nimport styles from './FriendList.module.css';\n\nconst FriendList = ({ friends }) => {\n    \n\n    const allFriends = friends.map(({ id, ...props }) => <FriendListItem {...props} key={id} />);\n        \n    return (\n    <>\n     <section className= {styles.section}>\n    <ul className={styles.friend_list}>\n        {allFriends}\n    </ul>\n    </section>\n    </>\n    )\n}\n\nexport default FriendList;\n\nFriendList.propTypes = {\n\n    friends: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n    \n        }\n        )\n    ).isRequired\n    \n}\n","import React from 'react';\n\nimport PropTypes from \"prop-types\";\n\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  \n  const transactionTableBody = items.map((item) => (\n<tr key={item.id} className={styles.body_column}>\n<td className={styles.text}>{item.type}</td>\n<td className={styles.text}>{item.amount}</td>\n<td className={styles.text}>{item.currency}</td>\n</tr>)\n)\n    return (\n   <>\n <table className={styles.transaction}>\n  <thead className={styles.table_head}>\n    <tr className={styles.head_column}>\n      <th className={styles.name}>Type</th>\n      <th className={styles.name}>Amount</th>\n      <th className={styles.name}>Currency</th>\n    </tr>\n  </thead>\n\n  <tbody className={styles.table_body}> \n  {transactionTableBody}\n  </tbody>\n </table>\n    </>\n)\n};\n\nexport default TransactionHistory;\n\nTransactionHistory.propTypes = {\n \n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n    id:PropTypes.number.isRequired,\n    type:PropTypes.string.isRequired,\n    amount: PropTypes.number.isRequired,\n    currency: PropTypes.string.isRequired,\n\n    })\n  ).isRequired\n}","import './App.css';\n\nimport Profile from './components/Profile';\nimport Statistics from './components/Statistics';\nimport FriendList from './components/FriendList';\nimport TransactionHistory from './components/TransactionHistory';\n\nimport user from './json/user.json';\nimport statisticalData from './json/statistical-data.json';\nimport friends from './json/friends.json';\nimport transactions from './json/transactions.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats} />\n      \n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      \n      <FriendList friends={friends} />\n      \n      <TransactionHistory items={transactions} />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}